{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Desktop/react-ed/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const axios = require('axios');\n\n  const [isValidated, setIsValidated] = useState(true); // false\n\n  const [loginSuccessful, setLoginSuccessful] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isTaking, setIsTaking] = useState(false);\n  const [isRedirecting, setIsRedirecting] = useState(false);\n  const [isThereGrades, setIsThereGrades] = useState(true); // false\n\n  const [realGrades, setRealGrades] = useState({});\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const getAverage = _ref => {\n    let {\n      codeMatiere,\n      codePeriode\n    } = _ref;\n\n    if (codePeriode in realGrades[codeMatiere]) {\n      return realGrades[codeMatiere][codePeriode].moyenne;\n    } else {\n      return -1;\n    }\n  };\n\n  const getData = async () => {\n    setIsLoading(true);\n    const loginURL = \"https://api.ecoledirecte.com/v3/login.awp?v=4.17.9\";\n    const loginPayload = {\n      \"uuid\": \"\",\n      \"identifiant\": username,\n      \"motdepasse\": password,\n      \"isReLogin\": false\n    };\n    setIsConnecting(true);\n    axios.post(loginURL, \"data=\" + JSON.stringify(loginPayload)).then(loginResponse => {\n      setIsConnecting(false);\n      const loginResponseCode = loginResponse.data.code;\n\n      if (loginResponseCode !== 200) {\n        setIsValidated(false);\n        setLoginSuccessful(false);\n        setIsLoading(false);\n        return 0;\n      }\n\n      setLoginSuccessful(true);\n      const studentToken = loginResponse.data.token;\n      const studentID = loginResponse.data.data.accounts[0].id;\n      const gradesURL = \"https://api.ecoledirecte.com/v3/eleves/\" + studentID + \"/notes.awp?verbe=get&v=4.17.9\";\n      const gradesPayload = {\n        \"anneeScolaire\": \"\"\n      };\n      const gradesHeaders = {\n        \"x-token\": studentToken\n      };\n      setIsTaking(true);\n      axios.post(gradesURL, \"data=\" + JSON.stringify(gradesPayload), {\n        headers: gradesHeaders\n      }).then(gradesResponse => {\n        setIsTaking(false);\n        const gradesResponseCode = gradesResponse.data.code;\n\n        if (gradesResponseCode !== 200) {\n          setIsLoading(false);\n          return 0;\n        }\n\n        calculateAverages(gradesResponse.data);\n      });\n    });\n  };\n\n  const calculateAverages = _ref2 => {\n    let {\n      data\n    } = _ref2;\n\n    if (!(data.notes.length === 0)) {\n      setIsThereGrades(true);\n    } else {\n      setIsThereGrades(false);\n    }\n\n    var grades = {\n      \"GENERALE\": {}\n    }; // Addition des notes\n\n    for (var note of data.notes) {\n      if (!(note.codeMatiere in grades)) {\n        grades[note.codeMatiere] = {};\n      }\n\n      if (!(note.codePeriode in grades[note.codeMatiere])) {\n        grades[note.codeMatiere][note.codePeriode] = {\n          \"total\": 0.0,\n          \"coef\": 0.0,\n          \"moyenne\": 0.0\n        };\n        grades[note.codeMatiere].completeName = note.libelleMatiere;\n      }\n\n      var valeur = parseFloat(note.valeur.replace(\",\", \".\"));\n      var valeurSur = parseFloat(note.noteSur.replace(\",\", \".\"));\n      grades[note.codeMatiere][note.codePeriode].total += valeur / (valeurSur / 1.0) * 20.0;\n      grades[note.codeMatiere][note.codePeriode].coef += 1.0;\n    } // Calcul des moyennes par matière\n\n\n    for (const [codeMatiere, matiere] of Object.entries(grades)) {\n      if (codeMatiere !== \"GENERALE\") {\n        for (const [codePeriode, periode] of Object.entries(matiere)) {\n          if (codePeriode !== \"completeName\") {\n            var moyenne = grades[codeMatiere][codePeriode].total / grades[codeMatiere][codePeriode].coef;\n            moyenne = Math.round(moyenne * 100) / 100.0;\n            grades[codeMatiere][codePeriode].moyenne = moyenne;\n\n            if (!(codePeriode in grades.GENERALE)) {\n              grades.GENERALE[codePeriode] = {\n                \"total\": 0.0,\n                \"coef\": 0.0,\n                \"moyenne\": 0.0\n              };\n              grades.GENERALE.completeName = \"MOYENNE GÉNÉRALE\";\n            }\n\n            grades.GENERALE[codePeriode].total += moyenne;\n            grades.GENERALE[codePeriode].coef += 1.0;\n          }\n        }\n      }\n    } // Calcul de la moyenne générale\n\n\n    for (const [codePeriode, periode] of Object.entries(grades.GENERALE)) {\n      if (codePeriode !== \"completeName\") {\n        var moyenne = grades.GENERALE[codePeriode].total / grades.GENERALE[codePeriode].coef;\n        moyenne = Math.round(moyenne * 100) / 100.0;\n        grades.GENERALE[codePeriode].moyenne = moyenne;\n      }\n    }\n\n    setRealGrades(grades);\n    setIsLoading(false);\n    console.log(realGrades);\n  };\n\n  const submit = async () => {\n    if (!isLoading) {\n      setIsValidated(true);\n      getData();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: (() => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Moyennes \\xC9cole Directe \", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"version\",\n              children: \"v2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Entrez votre identifiant et mot de passe ED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: loginSuccessful ? \"\" : \"Identifiant ou mot de passe incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUsernameChange,\n            type: \"text\",\n            placeholder: \"Identifiant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handlePasswordChange,\n            type: \"password\",\n            placeholder: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submit,\n            children: isConnecting ? \"Connexion...\" : isTaking ? \"Récupération des notes...\" : \"Valider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), (() => {\n          // Affichage des Moyennes\n          if (isValidated && loginSuccessful && !isLoading) {\n            if (isThereGrades) {\n              var moyennes = [];\n\n              for (const [codeMatiere, matiere] of Object.entries(realGrades)) {\n                moyennes.push( /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"box\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: matiere.completeName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 27\n                  }, this), (() => {\n                    const average = getAverage({\n                      codeMatiere: codeMatiere,\n                      codePeriode: \"A001\"\n                    });\n\n                    if (average !== -1) {\n                      return /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Trimestre 1\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 44\n                        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"--\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 68\n                        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: \"note\",\n                          children: average\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 79\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 38\n                      }, this);\n                    }\n                  })(), (() => {\n                    const average = getAverage({\n                      codeMatiere: codeMatiere,\n                      codePeriode: \"A002\"\n                    });\n\n                    if (average !== -1) {\n                      return /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Trimestre 2\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 44\n                        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"--\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 68\n                        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: \"note\",\n                          children: average\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 79\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 38\n                      }, this);\n                    }\n                  })(), (() => {\n                    const average = getAverage({\n                      codeMatiere: codeMatiere,\n                      codePeriode: \"A003\"\n                    });\n\n                    if (average !== -1) {\n                      return /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"Trimestre 3\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 44\n                        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                          children: \"--\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 68\n                        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                          className: \"note\",\n                          children: average\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 79\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 38\n                      }, this);\n                    }\n                  })()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 25\n                }, this));\n              }\n\n              return moyennes;\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Pas de notes pour l'instant...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 23\n              }, this);\n            }\n          }\n        })(), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"https://www.ecoledirecte.com\",\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\xC9cole Directe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ce cite calcule les moyennes de chaque mati\\xE8re ainsi que la moyenne g\\xE9n\\xE9rale, cette fonction n'est plus disponible sur le site officiel.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => setIsRedirecting(true),\n            children: isRedirecting ? \"Redirection...\" : \"Site officiel ED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"DF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this);\n    })()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QGb6EDPKmxy1CIxsogc7p+Dun5o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","username","setUsername","password","setPassword","axios","require","isValidated","setIsValidated","loginSuccessful","setLoginSuccessful","isLoading","setIsLoading","isConnecting","setIsConnecting","isTaking","setIsTaking","isRedirecting","setIsRedirecting","isThereGrades","setIsThereGrades","realGrades","setRealGrades","handleUsernameChange","event","target","value","handlePasswordChange","getAverage","codeMatiere","codePeriode","moyenne","getData","loginURL","loginPayload","post","JSON","stringify","then","loginResponse","loginResponseCode","data","code","studentToken","token","studentID","accounts","id","gradesURL","gradesPayload","gradesHeaders","headers","gradesResponse","gradesResponseCode","calculateAverages","notes","length","grades","note","completeName","libelleMatiere","valeur","parseFloat","replace","valeurSur","noteSur","total","coef","matiere","Object","entries","periode","Math","round","GENERALE","console","log","submit","moyennes","push","average"],"sources":["/Users/diego/Desktop/react-ed/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './App.css';\n\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const axios = require('axios');\n\n  const [isValidated, setIsValidated] = useState(true);          // false\n  const [loginSuccessful, setLoginSuccessful] = useState(true);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isTaking, setIsTaking] = useState(false);\n\n  const [isRedirecting, setIsRedirecting] = useState(false);\n\n  const [isThereGrades, setIsThereGrades] = useState(true);     // false\n  const [realGrades, setRealGrades] = useState({});\n\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  }\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  }\n\n  const getAverage = ({ codeMatiere, codePeriode }) => {\n    if (codePeriode in realGrades[codeMatiere]) {\n      return realGrades[codeMatiere][codePeriode].moyenne;\n    } else {\n      return -1;\n    }\n  }\n\n  const getData = async() => {\n    setIsLoading(true);\n\n    const loginURL = \"https://api.ecoledirecte.com/v3/login.awp?v=4.17.9\";\n    \n    const loginPayload = {\n      \"uuid\": \"\",\n      \"identifiant\": username,\n      \"motdepasse\": password,\n      \"isReLogin\": false\n    }\n\n    setIsConnecting(true);\n    axios.post(loginURL, \"data=\" + JSON.stringify(loginPayload)).then((loginResponse) => {\n      setIsConnecting(false);\n      const loginResponseCode = loginResponse.data.code;\n      if (loginResponseCode !== 200) {\n        setIsValidated(false);\n        setLoginSuccessful(false);\n        setIsLoading(false);\n        return 0;\n      }\n      setLoginSuccessful(true);\n      \n      const studentToken = loginResponse.data.token;\n      const studentID = loginResponse.data.data.accounts[0].id;\n\n      const gradesURL = \"https://api.ecoledirecte.com/v3/eleves/\" + studentID + \"/notes.awp?verbe=get&v=4.17.9\";\n\n      const gradesPayload = {\n        \"anneeScolaire\": \"\"\n      }\n\n      const gradesHeaders = {\n        \"x-token\": studentToken\n      }\n\n      setIsTaking(true);\n      axios.post(gradesURL, \"data=\" + JSON.stringify(gradesPayload), { headers: gradesHeaders }).then((gradesResponse) => {\n        setIsTaking(false);\n        const gradesResponseCode = gradesResponse.data.code;\n        if (gradesResponseCode !== 200) {\n          setIsLoading(false);\n          return 0;\n        }\n        calculateAverages(gradesResponse.data);\n      });\n    });\n  }\n\n  const calculateAverages = ({ data }) => {\n    if (!(data.notes.length === 0)) { setIsThereGrades(true); }\n    else { setIsThereGrades(false); }\n\n    var grades = {\n      \"GENERALE\": {}\n    };\n    \n    // Addition des notes\n    for (var note of data.notes) {\n      if (!(note.codeMatiere in grades)) {\n        grades[note.codeMatiere] = {};\n      }\n      if (!(note.codePeriode in grades[note.codeMatiere])) {\n        grades[note.codeMatiere][note.codePeriode] = {\n          \"total\": 0.0,\n          \"coef\": 0.0,\n          \"moyenne\": 0.0\n        }\n        grades[note.codeMatiere].completeName = note.libelleMatiere;\n      }\n      var valeur = parseFloat(note.valeur.replace(\",\", \".\"));\n      var valeurSur = parseFloat(note.noteSur.replace(\",\", \".\"));\n\n      grades[note.codeMatiere][note.codePeriode].total += (valeur / (valeurSur / 1.0)) * 20.0;\n      grades[note.codeMatiere][note.codePeriode].coef += 1.0;\n    }\n\n    // Calcul des moyennes par matière\n    for (const [codeMatiere, matiere] of Object.entries(grades)) {\n      if (codeMatiere !== \"GENERALE\") {\n        for (const [codePeriode, periode] of Object.entries(matiere)) {\n          if (codePeriode !== \"completeName\") {\n            var moyenne = grades[codeMatiere][codePeriode].total / grades[codeMatiere][codePeriode].coef;\n            moyenne = Math.round(moyenne * 100) / 100.0;\n            grades[codeMatiere][codePeriode].moyenne = moyenne;\n            \n            if (!(codePeriode in grades.GENERALE)) {\n              grades.GENERALE[codePeriode] = {\n                \"total\": 0.0,\n                \"coef\": 0.0,\n                \"moyenne\": 0.0\n              };\n              grades.GENERALE.completeName = \"MOYENNE GÉNÉRALE\";\n            }\n            \n            grades.GENERALE[codePeriode].total += moyenne;\n            grades.GENERALE[codePeriode].coef += 1.0;\n          }\n        }\n      }\n    }\n\n    // Calcul de la moyenne générale\n    for (const [codePeriode, periode] of Object.entries(grades.GENERALE)) {\n      if (codePeriode !== \"completeName\") {\n        var moyenne = grades.GENERALE[codePeriode].total / grades.GENERALE[codePeriode].coef;\n        moyenne = Math.round(moyenne * 100) / 100.0;\n        grades.GENERALE[codePeriode].moyenne = moyenne;\n      }\n    }\n\n    setRealGrades(grades);\n    setIsLoading(false);\n\n    console.log(realGrades);\n  }\n\n  const submit = async() => {\n    if (!isLoading) {\n      setIsValidated(true);\n      getData();\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      {(() => {\n        return (\n            <div>\n              <div className=\"box\">\n                <h1>Moyennes École Directe <a className=\"version\">v2</a></h1>\n                <p>Entrez votre identifiant et mot de passe ED</p>\n                <a>{loginSuccessful ? \"\" : \"Identifiant ou mot de passe incorrect\"}</a>\n                <input onChange={handleUsernameChange} type=\"text\" placeholder=\"Identifiant\"></input>\n                <input onChange={handlePasswordChange} type=\"password\" placeholder=\"Mot de passe\"></input>\n                <button onClick={submit}>{isConnecting ? \"Connexion...\" : isTaking ? \"Récupération des notes...\" : \"Valider\"}</button>\n              </div>\n\n              {(() => {\n                // Affichage des Moyennes\n                if (isValidated && loginSuccessful && !isLoading) {\n                  if (isThereGrades) {\n                    var moyennes = [];\n\n                    for (const [codeMatiere, matiere] of Object.entries(realGrades)) {\n                      moyennes.push(\n                        <div className=\"box\">\n                          <h1>{matiere.completeName}</h1>\n                          {(() => {\n                            const average = getAverage({codeMatiere: codeMatiere, codePeriode: \"A001\"});\n\n                            if (average !== -1) {\n                              return <span><h3>{\"Trimestre 1\"}</h3><h3>--</h3><h3 className=\"note\">{average}</h3></span>;\n                            }\n                          })()}\n                          {(() => {\n                            const average = getAverage({codeMatiere: codeMatiere, codePeriode: \"A002\"});\n\n                            if (average !== -1) {\n                              return <span><h3>{\"Trimestre 2\"}</h3><h3>--</h3><h3 className=\"note\">{average}</h3></span>;\n                            }\n                          })()}\n                          {(() => {\n                            const average = getAverage({codeMatiere: codeMatiere, codePeriode: \"A003\"});\n\n                            if (average !== -1) {\n                              return <span><h3>{\"Trimestre 3\"}</h3><h3>--</h3><h3 className=\"note\">{average}</h3></span>;\n                            }\n                          })()}\n                        </div>\n                      );\n                    }\n                    return moyennes;\n\n                  } else {\n                    return (\n                      <div className=\"box\">\n                        <h2>Pas de notes pour l'instant...</h2>\n                      </div>\n                    )\n                  }\n                }\n              })()}\n\n              <form action=\"https://www.ecoledirecte.com\" className=\"box\">\n                <h1>École Directe</h1>\n                <p>Ce cite calcule les moyennes de chaque matière ainsi que la moyenne générale, cette fonction n'est plus disponible sur le site officiel.</p>\n                <button type=\"submit\" onClick={() => setIsRedirecting(true)}>{isRedirecting ? \"Redirection...\" : \"Site officiel ED\"}</button>\n                <p>DF</p>\n              </form>\n            </div>\n          )\n      })()}\n    </div>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}